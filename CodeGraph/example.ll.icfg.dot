digraph "ICFG" {
	label="ICFG";

	Node0xaaaac30a31c0 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \nConstNullPtrValVar ID: 0\n ptr null \{ constant data \}\nAddrStmt: [Var32 \<-- Var3]  \nConstIntValVar ID: 32\n i32 0 \{ constant data \}\nAddrStmt: [Var19 \<-- Var3]  \nConstIntValVar ID: 19\n i32 1 \{ constant data \}\nAddrStmt: [Var4 \<-- Var5]  \nFunValVar ID: 4\nsource\nAddrStmt: [Var9 \<-- Var10]  \nFunValVar ID: 9\nsink\nAddrStmt: [Var14 \<-- Var15]  \nFunValVar ID: 14\nmain}"];
	Node0xaaaac30a31c0 -> Node0xaaaac3098d90[style=solid];
	Node0xaaaac30a3ea0 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: source\}}"];
	Node0xaaaac30a3ea0 -> Node0xaaaac30e5390[style=solid];
	Node0xaaaac30ed500 [shape=record,color=green,label="{FunExitICFGNode2 \{fun: source\}|{<s0>0xaaaac30e7f30}}"];
	Node0xaaaac30ed500:s0 -> Node0xaaaac307d100[style=solid,color=blue];
	Node0xaaaac30e7550 [shape=record,color=yellow,label="{FunEntryICFGNode3 \{fun: sink\}}"];
	Node0xaaaac30e7550 -> Node0xaaaac30b84a0[style=solid];
	Node0xaaaac30b4c50 [shape=record,color=green,label="{FunExitICFGNode4 \{fun: sink\}|{<s0>0xaaaac30e5390}}"];
	Node0xaaaac30b4c50:s0 -> Node0xaaaac3090020[style=solid,color=blue];
	Node0xaaaac3098d90 [shape=record,color=yellow,label="{FunEntryICFGNode5 \{fun: main\}}"];
	Node0xaaaac3098d90 -> Node0xaaaac30b8610[style=solid];
	Node0xaaaac30c81c0 [shape=record,color=green,label="{FunExitICFGNode6 \{fun: main\}\nPhiStmt: [Var16 \<-- ([Var32, ICFGNode19],)]  \nValVar ID: 31\n   ret i32 0 }"];
	Node0xaaaac30e5390 [shape=record,color=red,label="{CallICFGNode7 \{fun: source\}\n   call void @sink() CallICFGNode: |{<s0>0xaaaac30e5390}}"];
	Node0xaaaac30e5390:s0 -> Node0xaaaac30e7550[style=solid,color=red];
	Node0xaaaac3090020 [shape=record,color=blue,label="{RetICFGNode8 \{fun: source\}\n   call void @sink() RetICFGNode: }"];
	Node0xaaaac3090020 -> Node0xaaaac30b8330[style=solid];
	Node0xaaaac30b8330 [shape=record,color=black,label="{IntraICFGNode9 \{fun: source\}\n   ret void }"];
	Node0xaaaac30b8330 -> Node0xaaaac30ed500[style=solid];
	Node0xaaaac30b84a0 [shape=record,color=black,label="{IntraICFGNode10 \{fun: sink\}\n   ret void }"];
	Node0xaaaac30b84a0 -> Node0xaaaac30b4c50[style=solid];
	Node0xaaaac30b8610 [shape=record,color=black,label="{IntraICFGNode11 \{fun: main\}\nAddrStmt: [Var17 \<-- Var18]  \nValVar ID: 17\n   %a = alloca i32, align 4 }"];
	Node0xaaaac30b8610 -> Node0xaaaac30b8c50[style=solid];
	Node0xaaaac30b8c50 [shape=record,color=black,label="{IntraICFGNode12 \{fun: main\}\nStoreStmt: [Var17 \<-- Var19]  \nValVar ID: 20\n   store i32 1, ptr %a, align 4 }"];
	Node0xaaaac30b8c50 -> Node0xaaaac30b21e0[style=solid];
	Node0xaaaac30b21e0 [shape=record,color=black,label="{IntraICFGNode13 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode14   \nValVar ID: 21\n   br label %while.cond }"];
	Node0xaaaac30b21e0 -> Node0xaaaac30e6c60[style=solid];
	Node0xaaaac30e6c60 [shape=record,color=black,label="{IntraICFGNode14 \{fun: main\}\nLoadStmt: [Var23 \<-- Var17]  \nValVar ID: 23\n   %0 = load i32, ptr %a, align 4 }"];
	Node0xaaaac30e6c60 -> Node0xaaaac308bea0[style=solid];
	Node0xaaaac308bea0 [shape=record,color=black,label="{IntraICFGNode15 \{fun: main\}\nCmpStmt: [Var24 \<-- (Var23 predicate41 Var19)]  \nValVar ID: 24\n   %cmp = icmp sle i32 %0, 1 }"];
	Node0xaaaac308bea0 -> Node0xaaaac308a860[style=solid];
	Node0xaaaac308a860 [shape=record,color=black,label="{IntraICFGNode16 \{fun: main\}\nBranchStmt: [Condition Var24]\nSuccessor 0 ICFGNode17   Successor 1 ICFGNode19   \nValVar ID: 25\n   br i1 %cmp, label %while.body, label %while.end }"];
	Node0xaaaac308a860 -> Node0xaaaac30e7f30[style=solid];
	Node0xaaaac308a860 -> Node0xaaaac3090390[style=solid];
	Node0xaaaac30e7f30 [shape=record,color=red,label="{CallICFGNode17 \{fun: main\}\nCallPE: [Var7 \<-- Var17]  \nValVar ID: 26\n   call void @source(ptr noundef %a) |{<s0>0xaaaac30e7f30}}"];
	Node0xaaaac30e7f30:s0 -> Node0xaaaac30a3ea0[style=solid,color=red];
	Node0xaaaac307d100 [shape=record,color=blue,label="{RetICFGNode18 \{fun: main\}\n   call void @source(ptr noundef %a) RetICFGNode: }"];
	Node0xaaaac307d100 -> Node0xaaaac3089eb0[style=solid];
	Node0xaaaac3090390 [shape=record,color=black,label="{IntraICFGNode19 \{fun: main\}\n   ret i32 0 }"];
	Node0xaaaac3090390 -> Node0xaaaac30c81c0[style=solid];
	Node0xaaaac3089eb0 [shape=record,color=black,label="{IntraICFGNode20 \{fun: main\}\nLoadStmt: [Var27 \<-- Var17]  \nValVar ID: 27\n   %1 = load i32, ptr %a, align 4 }"];
	Node0xaaaac3089eb0 -> Node0xaaaac3080b10[style=solid];
	Node0xaaaac3080b10 [shape=record,color=black,label="{IntraICFGNode21 \{fun: main\}\nBinaryOPStmt: [Var28 \<-- (Var27 opcode13 Var19)]  \nValVar ID: 28\n   %inc = add nsw i32 %1, 1 }"];
	Node0xaaaac3080b10 -> Node0xaaaac30a0e60[style=solid];
	Node0xaaaac30a0e60 [shape=record,color=black,label="{IntraICFGNode22 \{fun: main\}\nStoreStmt: [Var17 \<-- Var28]  \nValVar ID: 29\n   store i32 %inc, ptr %a, align 4 }"];
	Node0xaaaac30a0e60 -> Node0xaaaac30941b0[style=solid];
	Node0xaaaac30941b0 [shape=record,color=black,label="{IntraICFGNode23 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode14   \nValVar ID: 30\n   br label %while.cond, !llvm.loop !6 }"];
	Node0xaaaac30941b0 -> Node0xaaaac30e6c60[style=solid];
}
